# Docker Compose v2 format (no version needed)

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: kfp_reporting
      POSTGRES_USER: kfp_user
      POSTGRES_PASSWORD: kfp_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kfp_user -d kfp_reporting"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-change-me-in-production
      - DATABASE_URL=postgresql://kfp_user:kfp_password@db:5432/kfp_reporting
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:
