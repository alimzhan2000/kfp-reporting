#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import os
import sys
import django
from django.core.management import execute_from_command_line

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'kfp_reporting.settings')
    django.setup()
    
    from django.core.management import call_command
    from django.contrib.auth.models import User
    from accounts.models import UserProfile
    from django.contrib.auth.hashers import make_password
    import datetime
    
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    print("üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    try:
        call_command('migrate', verbosity=0)
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("üë• –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    demo_users = [
        {
            'username': 'admin',
            'password': 'admin123',
            'role': 'admin',
            'first_name': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            'last_name': '–°–∏—Å—Ç–µ–º—ã',
            'email': 'admin@kfp.com',
            'phone': '+7 (777) 123-45-67',
            'department': 'IT',
            'is_active_user': True
        },
        {
            'username': 'manager',
            'password': 'manager123',
            'role': 'manager',
            'first_name': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
            'last_name': '–û—Ç–¥–µ–ª–∞',
            'email': 'manager@kfp.com',
            'phone': '+7 (777) 234-56-78',
            'department': '–ê–≥—Ä–æ–Ω–æ–º–∏—è',
            'is_active_user': True
        },
        {
            'username': 'user',
            'password': 'user123',
            'role': 'user',
            'first_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'last_name': '–û–±—ã—á–Ω—ã–π',
            'email': 'user@kfp.com',
            'phone': '+7 (777) 345-67-89',
            'department': '–ü–æ–ª–µ',
            'is_active_user': True
        }
    ]
    
    created_count = 0
    for user_data in demo_users:
        if not User.objects.filter(username=user_data['username']).exists():
            try:
                user = User.objects.create(
                    username=user_data['username'],
                    password=make_password(user_data['password']),
                    first_name=user_data['first_name'],
                    last_name=user_data['last_name'],
                    email=user_data['email'],
                    is_active=True,
                    date_joined=datetime.datetime.now()
                )
                
                UserProfile.objects.create(
                    user=user,
                    role=user_data['role'],
                    phone=user_data['phone'],
                    department=user_data['department'],
                    is_active_user=user_data['is_active_user'],
                    created_at=datetime.datetime.now(),
                    updated_at=datetime.datetime.now()
                )
                created_count += 1
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data['username']}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_data['username']}: {e}")
        else:
            print(f"‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['username']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    print(f"üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {created_count}")
    return True

if __name__ == '__main__':
    success = init_database()
    sys.exit(0 if success else 1)
