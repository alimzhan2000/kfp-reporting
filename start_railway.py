#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –¥–ª—è Railway
–ß–∏—Ç–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PORT –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç Django
"""
import os
import sys
import subprocess
from pathlib import Path

def setup_admin():
    """–°–æ–∑–¥–∞–µ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    try:
        print("üîß Checking for admin user...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Django
        import django
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'kfp_reporting.settings')
        django.setup()
        
        from django.contrib.auth import get_user_model
        User = get_user_model()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if User.objects.filter(is_superuser=True).exists():
            print("‚úÖ Admin user already exists!")
            return
        
        # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username = os.environ.get('DJANGO_SUPERUSER_USERNAME', 'admin')
        email = os.environ.get('DJANGO_SUPERUSER_EMAIL', 'admin@kfp-reporting.com')
        password = os.environ.get('DJANGO_SUPERUSER_PASSWORD', 'admin123')
        
        user = User.objects.create_superuser(username, email, password)
        print(f"‚úÖ Admin user created:")
        print(f"   Username: {username}")
        print(f"   Email: {email}")
        print(f"   Password: {password}")
        print(f"üåê Admin panel: https://kfp-reporting.up.railway.app/admin/")
        
    except Exception as e:
        print(f"‚ö†Ô∏è  Could not create admin user: {e}")

def run_migrations():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("üîÑ Running database migrations...")
        cmd = [sys.executable, 'manage.py', 'migrate']
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ Migrations completed successfully!")
        print(result.stdout)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Migration failed: {e}")
        print(f"Error output: {e.stderr}")
        return False

def main():
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    port = os.environ.get('PORT', '8000')
    
    print(f"üöÄ Starting Django on port: {port}")
    print(f"Environment PORT: {os.environ.get('PORT', 'NOT SET')}")
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not run_migrations():
        print("‚ö†Ô∏è Migrations failed, but continuing...")
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    setup_admin()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Django runserver
    cmd = [
        sys.executable, 'manage.py', 'runserver', 
        f'0.0.0.0:{port}', '--noreload'
    ]
    
    print(f"Running command: {' '.join(cmd)}")
    
    try:
        subprocess.run(cmd, check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error running Django: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()
