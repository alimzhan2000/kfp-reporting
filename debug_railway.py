#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º Railway
"""
import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'kfp_reporting.settings')

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    required_vars = ['SECRET_KEY', 'DEBUG', 'ALLOWED_HOSTS']
    
    for var in required_vars:
        value = os.environ.get(var, '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')
        print(f"  {var}: {value}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DATABASE_URL
    db_url = os.environ.get('DATABASE_URL', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')
    print(f"  DATABASE_URL: {'–£–°–¢–ê–ù–û–í–õ–ï–ù–û' if db_url != '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û' else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Railway –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    railway_vars = ['RAILWAY_PUBLIC_DOMAIN', 'RAILWAY_STATIC_URL', 'PORT']
    for var in railway_vars:
        value = os.environ.get(var, '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')
        print(f"  {var}: {value}")

def check_django_setup():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django:")
    try:
        django.setup()
        print("  ‚úÖ Django —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        from django.conf import settings
        print(f"  INSTALLED_APPS: {len(settings.INSTALLED_APPS)} –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
        print(f"  DEBUG: {settings.DEBUG}")
        print(f"  ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db_config = settings.DATABASES['default']
        print(f"  DATABASE ENGINE: {db_config['ENGINE']}")
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django: {e}")

def check_models():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π:")
    try:
        from accounts.models import User
        from reports.models import AgriculturalData
        print("  ‚úÖ –ú–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
        from django.core.management import execute_from_command_line
        print("  ‚úÖ Django management –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã")
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π: {e}")

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    required_packages = [
        'django', 'djangorestframework', 'django_cors_headers',
        'psycopg2', 'gunicorn', 'whitenoise', 'python_decouple'
    ]
    
    for package in required_packages:
        try:
            __import__(package)
            print(f"  ‚úÖ {package}")
        except ImportError:
            print(f"  ‚ùå {package} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

def main():
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Railway –ø—Ä–æ–µ–∫—Ç–∞")
    print("=" * 50)
    
    check_environment()
    check_dependencies()
    check_django_setup()
    check_models()
    
    print("\n" + "=" * 50)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == '__main__':
    main()
